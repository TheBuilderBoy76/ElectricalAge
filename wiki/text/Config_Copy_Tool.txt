{{Item
|itemname=Config copy tool
|image=Configcopytool
|stackable=Yes (64)
}}
== Obtaining ==

Wrench could be crafting using this recipe:
{{Crafting_Grid
|1=Wrench|2=Redstone
|4=Redstone|5=Advanced Circuit
|result=Config Copy Tool}}

== Usage ==
It is used to copy configs (how did i guess?..) from components to components.

First, you need to copy config. This is being done by pressing Sneak (def. Left Shift) and Use/Place (Right by def.) click on block you need to copy from. You will hear a sound if it worked: low, high.

Second, it needs to be pasted. This is being done by pressing Use (without Sneak!) on the block you want to paste it to. Again you will hear sound, but this time different: high, low.

If you hear low, low (the same tone twice) at any time, it didn't work. You can't copy or (yet) paste from or to what you're looking at. (If that's unexpected, open an issue!)

The tool item itself remembers the config, so you don't need to copy after pasting--you can paste the same config as many times as you want. You can even have multiple tools with different configs, and give them to other players with their configs intact--neat!

You don't have to copy and paste from/to the same element; most of them are smart about how they store data, and it transfers in sensible ways. For example, copying from any [[electrical probe]] to a [[Data Logger]] will automatically configure the correct range and units; copying from the same probe to another probe will not only configure the range and units, but also the [[Electrical Cables|cable]] used (taking one from your inventory if you have it in survival, or creating one in creative). The time step pasted to the [[Data Logger]] will be from the last one copied, even if you copied from, e.g., electrical probes since then, so you can make them all consistent even when they report different units and measures.

Aside from signal processing, the tool can configure [[Capacitors]], [[Inductor]]s, [[Transformer]]s, and more, drawing from your survival inventory for items as needed. (Beware that not having enough items might result in a problematic configuration!) For developers: any <code>Element</code> can implement <code>IConfigurable</code> and participate in the system, using well-known NBT keys to communicate; [[Codebase|read the source]] to find the usages. As a result, an up-to-date index is difficult to maintain.
